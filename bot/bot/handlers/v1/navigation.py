from aiogram import types, Router
from aiogram.fsm.context import FSMContext

from states import ChatState
from keyboards.inline import main_menu_kb, menu_button

router = Router()


@router.callback_query(lambda c: c.data.startswith('to_menu'))
async def to_menu_handler(callback: types.CallbackQuery, state: FSMContext):
    await callback.answer()
    if callback.data in [
        'to_menu_from_info',
        'to_menu_from_doctor_search'
    ]:
        await callback.message.delete()
    else:
        await callback.bot.edit_message_reply_markup(
            chat_id=callback.message.chat.id,
            message_id=callback.message.message_id,
            reply_markup=None
        )
    await state.clear()
    await callback.message.answer(
        'üëã *–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é*\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
        parse_mode='Markdown',
        reply_markup=main_menu_kb()
    )


@router.callback_query(lambda c: c.data == 'chat')
async def chat_callback_handler(
    callback: types.CallbackQuery,
    state: FSMContext
):
    await callback.answer()
    await state.clear()
    await state.set_state(ChatState.chatting)
    await state.update_data(messages=[])

    await callback.message.delete()
    await callback.message.answer(
        'üí¨ –û–ø–∏—à–∏—Ç–µ –≤–∞—à–∏ —Å–∏–º–ø—Ç–æ–º—ã, –∏ —è –ø–æ–º–æ–≥—É –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å, '
        '–∫ –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è.'
    )


@router.callback_query(lambda c: c.data == 'info')
async def info_callback_handler(
    callback: types.CallbackQuery, state: FSMContext
):
    await callback.answer()
    await callback.message.delete()
    msg = (
        '‚ÑπÔ∏è *OneClickDoctor* ‚Äî –±–æ—Ç –¥–ª—è –ø–æ–¥–±–æ—Ä–∞ –≤—Ä–∞—á–∞ –∏ –ø–æ–º–æ—â–∏ —Å '
        '—Å–∏–º–ø—Ç–æ–º–∞–º–∏.\n\n'
        '‚Ä¢ –ë—ã—Å—Ç—Ä—ã–π –ø–æ–¥–±–æ—Ä –≤—Ä–∞—á–∞ –ø–æ —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏\n'
        '‚Ä¢ –ü–æ–º–æ—â—å —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ–º, –∫ –∫–∞–∫–æ–º—É –≤—Ä–∞—á—É –æ–±—Ä–∞—Ç–∏—Ç—å—Å—è –ø–æ —Å–∏–º–ø—Ç–æ–º–∞–º\n\n'
        '–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫: @yourusername'
    )
    await callback.message.answer(
        msg,
        parse_mode='Markdown',
        reply_markup=menu_button(from_info=True)
    ) 